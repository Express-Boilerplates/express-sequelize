define({ "api": [  {    "type": "POST",    "url": "v1/fbAuth/:token",    "title": "Authenticate with Facebook",    "name": "Facebook_Auth",    "group": "User",    "version": "1.0.0",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "token",            "description": "<p>Facebook user access token</p>"          }        ]      }    },    "filename": "src/api/v1/users/routes.js",    "groupTitle": "User"  },  {    "type": "POST",    "url": "v1/users/login",    "title": "Login user",    "description": "<p>Login to user account</p>",    "name": "Login",    "group": "User",    "version": "1.0.0",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>Email</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>Password</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "string",            "optional": false,            "field": "message",            "description": "<p>Login successfull msg</p>"          },          {            "group": "Success 200",            "type": "string",            "optional": false,            "field": "token",            "description": "<p>Generated jwt token</p>"          }        ]      }    },    "error": {      "fields": {        "Bad Request 400": [          {            "group": "Bad Request 400",            "optional": false,            "field": "VALIDATION_ERROR",            "description": "<p>Some parameters may contain invalid values</p>"          }        ]      },      "examples": [        {          "title": "When no field provided:",          "content": "{\n    \"type\": \"VALIDATION_ERROR\",\n    \"errors\": {\n        \"email\": \"\\\"email\\\" is required\",\n        \"password\": \"\\\"password\\\" is required\"\n    },\n    \"message\": \"You have some validation error\",\n    \"stack\": \"ValidationError: \\\"email\\\" is required. \\\"password\\\" is required\"\n}",          "type": "Object"        },        {          "title": "When email address is wrong:",          "content": "{\n    \"type\": \"VALIDATION_ERROR\",\n    \"errors\": {\n        \"email\": \"\\\"email\\\" must be a valid email\"\n    },\n    \"message\": \"You have some validation error\",\n    \"stack\": \"ValidationError: \\\"email\\\" must be a valid email\"\n}",          "type": "Object"        }      ]    },    "filename": "src/api/v1/users/routes.js",    "groupTitle": "User"  },  {    "type": "POST",    "url": "v1/users/logout",    "title": "Logout user",    "description": "<p>Get current logged in user object</p>",    "name": "Logout",    "group": "User",    "version": "1.0.0",    "permission": [      {        "name": "Authenticated",        "title": "Authentication need for this.",        "description": "<p>Bearer token must be passed via Aythorization header or cookie</p>"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>Authorization token</p>"          }        ]      },      "examples": [        {          "title": "Header-Example",          "content": "Authorization: Bearer {{token}}",          "type": "Header"        }      ]    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "{\n    \"message\": \"Logged out successfully\"\n}",          "type": "json"        }      ]    },    "filename": "src/api/v1/users/routes.js",    "groupTitle": "User"  },  {    "type": "GET",    "url": "v1/users/me",    "title": "My info",    "description": "<p>Logout currently logged in user</p>",    "name": "Me",    "group": "User",    "version": "1.0.0",    "permission": [      {        "name": "Authenticated",        "title": "Authentication need for this.",        "description": "<p>Bearer token must be passed via Aythorization header or cookie</p>"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>Authorization token</p>"          }        ]      },      "examples": [        {          "title": "Header-Example",          "content": "Authorization: Bearer {{token}}",          "type": "Header"        }      ]    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "{\n    \"_id\": \"0c1b30b3-23e0-46e6-aa0f-5ef265420ec7\",\n    \"firstName\": \"SHoaib\",\n    \"lastName\": \"Sharif\",\n    \"email\": \"shoaibd@gmail.com\",\n    \"password\": \"$2a$10$GbguiA/DSO9vrB6XvU1CQ.CW9QuD7XVONTcd8Zb3ReTP81A0QF.4.\",\n    \"updatedAt\": \"2019-12-08T05:58:14.116Z\",\n    \"createdAt\": \"2019-12-08T05:58:14.116Z\"\n}",          "type": "json"        }      ]    },    "filename": "src/api/v1/users/routes.js",    "groupTitle": "User"  },  {    "type": "POST",    "url": "v1/users/register",    "title": "Register user",    "description": "<p>Register user account</p>",    "name": "Register",    "group": "User",    "version": "1.0.0",    "parameter": {      "fields": {        "Parameter": [          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "firstName",            "description": "<p>User First Name</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "lastName",            "description": "<p>User Last Name</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "email",            "description": "<p>(unique)           User Email address</p>"          },          {            "group": "Parameter",            "type": "String",            "optional": false,            "field": "password",            "description": "<p>User password address</p>"          }        ]      }    },    "success": {      "fields": {        "Success 200": [          {            "group": "Success 200",            "type": "String",            "optional": false,            "field": "message",            "description": "<p>Success message</p>"          },          {            "group": "Success 200",            "type": "Object",            "optional": false,            "field": "user",            "description": "<p>User detail object</p>"          }        ]      },      "examples": [        {          "title": "Success-Response:",          "content": "{\n    \"message\": \"You have registered successfully\",\n    \"user\": {\n        \"_id\": \"0c1b30b3-23e0-46e6-aa0f-5ef265420ec7\",\n        \"firstName\": \"SHoaib\",\n        \"lastName\": \"Sharif\",\n        \"email\": \"shoaibd@gmail.com\",\n        \"password\": \"$2a$10$GbguiA/DSO9vrB6XvU1CQ.CW9QuD7XVONTcd8Zb3ReTP81A0QF.4.\",\n        \"updatedAt\": \"2019-12-08T05:58:14.116Z\",\n        \"createdAt\": \"2019-12-08T05:58:14.116Z\"\n    }\n}",          "type": "json"        }      ]    },    "error": {      "fields": {        "Bad Request 400": [          {            "group": "Bad Request 400",            "optional": false,            "field": "VALIDATION_ERROR",            "description": "<p>Some parameters may contain invalid values</p>"          }        ]      },      "examples": [        {          "title": "Email already taken:",          "content": "{\n    \"type\": \"VALIDATION_ERROR\",\n    \"errors\": {\n        \"email\": \"Email already in use\"\n    },\n    \"message\": \"{{error Stack}}\"\n}",          "type": "type"        },        {          "title": "No field provided",          "content": "{\n    \"type\": \"VALIDATION_ERROR\",\n    \"errors\": {\n        \"firstName\": \"Required\",\n        \"lastName\": \"Required\",\n        \"email\": \"Required\",\n        \"password\": \"Required\"\n    },\n    \"message\": \"{{error Stack}}\"\n}",          "type": "Object"        }      ]    },    "filename": "src/api/v1/users/routes.js",    "groupTitle": "User"  }] });
